<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.BoardDAO">
	<resultMap type="boardVO" id="boardMap">
		<!-- property : 멤버변수에 대한 getter/setter -->
		<!-- 컬럼과 property가 같으면 생략가능   -->
		<!-- 
		<result column="no" property="no"/>
		<result column="title" property="title"/>
		<result column="writer" property="writer"/>
		<result column="content" property="content"/>
		 -->
		<result column="view_cnt" property="viewCnt"/>
		<result column="reg_date" property="regDate"/>
	</resultMap>
	
	<sql id="selectAll">
		select no, title, writer, content, view_cnt as viewCnt
		 , to_char(reg_date, 'yyyy-mm-dd') as regDate 
		 from t_board
	</sql>

	<!-- parameterType : 날라오는 boardVO를 매핑하기 위함 -->
	<!-- ${title} : 겟터로 알아서 매핑, statement 객체이기 떄문에 작은 따옴표를 적어주어야한다.-->
	<!-- #{title} : prepareStatement 객체 -->
	<insert id="insertBoard" parameterType="boardVO">
		insert into t_board(no, title, writer, content)
		 values(seq_t_board_no.nextval, #{title}, #{writer}, #{content})
	</insert>
	<!-- resultType: select 후 결과의 타입 기본형태는 하나의 레코드의 컬럼들의 단위를 설정, 알아서 셋터로 바꿔줌-->
<!-- 	
	<select id="selectAllBoard" resultType="boardVO">
		select no, title, writer, content, view_cnt as viewCnt
		 , to_char(reg_date, 'yyyy-mm-dd') as regDate 
		 from t_board 
		  order by no desc 
	</select>
 -->
	<select id="selectAllBoard" resultType="boardVO">
		<include refid="selectAll"/>
		  order by no desc 
	</select>
	<!-- parameterType="int" 일 경우는 어떤 이름을 적어주어도 된다 -->
	<select id="selectByNo" resultType="boardVO" parameterType="int">
		select no, title, writer, content, view_cnt as viewCnt
		 , to_char(reg_date, 'yyyy-mm-dd') as regDate 
		 from t_board 
		  where no = #{no}
	</select>
	
	<select id="selectByNo2" resultType="boardVO" parameterType="boardVO">
		select no, title, writer, content, view_cnt as viewCnt
		 , to_char(reg_date, 'yyyy-mm-dd') as regDate 
		 from t_board 
		  where no = #{no}
	</select>
	
	<select id="selectByNo3" parameterType="boardVO" resultMap="boardMap">
		select * 
		 from t_board 
		  where no = #{no}
	</select>

	<select id="selectWhere" parameterType="string" resultType="boardVO">
		<include refid="selectAll"/>
			where title like '%' || #{title} || '%'
<!-- 		where title like '%${title}%'-->		
	</select>
	
	<select id="selectWhere2" parameterType="string" resultType="boardVO">
		<include refid="selectAll"/>
		<where> 
			<if test="title != null">
		  		title = #{title}
		  	</if>
		  	<if test="writer != null">
		  		and	writer = #{writer}
		  	</if>
		</where>
	</select>
	
	<select id="selectNos" parameterType="boardVO" resultType="boardVO">
		<include refid="selectAll"/>
		where no in 
			<foreach collection="nos" item="bno" separator="," open="(" close=")">
				#{bno}
			</foreach>
		
	</select>
	
	<!-- 자료형 배열이 파라미터로 날라오면 무조건 collection="array" -->
	<select id="selectNos2" parameterType="int[]" resultType="boardVO">
		<include refid="selectAll"/>
		where no in 
			<foreach collection="array" item="bno" separator="," open="(" close=")">
				#{bno}
			</foreach>
		
	</select>
	<!-- 
	<select id="selectMap" parameterType="Hashmap" resultType="boardVO">
	 -->
	<select id="selectMap" resultType="boardVO" parameterType="map">
		<include refid="selectAll" />
		where title = #{title} and writer = #{writer}
	</select>
	
	<select id="selectMap2" resultType="map" parameterType="map">
		<include refid="selectAll" />
		where no = #{no}
	</select>
</mapper>